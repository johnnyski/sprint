      SUBROUTINE BEAMIN
C
C  IDIR             SWEEP DIRECTION.  CW=1, CCW=-1
C  IHR              TIME IN HOURS.
C  IRAY             INTEGER ARRAY OF FIELD VALUES(1-NG) AND HOUSEKEEPING
C  ISEC             TIME IN SECONDS (=60*MIN+SEC)
C  KAZ(KAZC)        INTEGER ARRAY OF AZIMUTHS
C  KAZC             CURRENT RAY INDEX IN ARRAYS IRAY AND KAZ
C  KAZP             PREVIOUS RAY INDEX IN ARRAYS IRAY AND KAZ
C  NRDOPT           REQUEST FROM CALLER FOR ACTION.
C                   =0, SEND NEXT RAY.
C                   =1, GO TO NEXT ELEVATION SWEEP WITHIN ELB(IEL1) AND
C                           ELB(IEL2).  RESET NRDOPT=0.
C                   =2, READ FIRST BEAM IN SCAN, RESET RECORD COUNTER TO
C                           END OF SWEEP.
C  NSTBM            BEAM STATUS FROM BEAMIN.
C                   =0, NEW BEAM IN OUTPUT WORDS.
C                   =1, END OF SWEEP INDICATED.
C                   =2, SOMETHING IS NOT CORRECT.
C
      PARAMETER  (MAXEL=80, MAXIN=8500, NIOB=85000, NRHD=10,
     X     MAXPLN=65536)
      LOGICAL IS360
C
      COMMON/ADJUST/INFLD(10,3),SCLIF(10,2),NIF,IOFLD(10,3),SCLOF(10,2),
     X     NOF,SCLAZ,SCLRNG,SCLEL,UNSCAZ,UNSCRG,UNSCEL,LOWAZ,IZAD,IS360,
     X   MINAZ,MAXAZ,METSPC(10),IWFLD(10),NFLI,SCLNYQ,UNSNYQ
      COMMON /FNAMES/ CINFLD(10),CIOFLD(10)
      CHARACTER*8 CINFLD, CIOFLD
      COMMON /SCNDAT/ ELB(MAXEL),DEI(MAXEL),KDIR(MAXEL),KNDREC(MAXEL),
     X   NEL,IEL1,IEL2,KEL,KPEL,ISD,ELTOL,RNOT,DRG,NG,MAXRD,CFAC(10)
      COMMON /IO/KPCK(NIOB),NWORD(MAXIN,3),KAZ(3),KAZC,KAZP,IDIR,ITMDIF,
     X           IHR,IMIN, ISEC, IREC,IBEGT(4),NSTBM, NRDOPT,ILSTREC
      COMMON /NCARFB/ NF,IDXFV(10)
      COMMON /COPE/ IADJAZ
      COMMON /SCRDSK/ LTMP
      COMMON /SCAN/ ICOPLANE,IFLGBAS,IPPI
      COMMON /RHIS/ IRHICRS,LOWAZ2,MAXAZ2,MINAZ2,ICART2(MAXPLN),
     X     ICTAB2(4),KZV(3),IDSV

c      common /junk/ azc1,azp1

      DATA SCLTIM/8.0/
C     THE FOLLOWING IS THE DEGREES TO RADIANS CONVERSION
      DATA DTR /0.0174533/
      DATA JRH6,JRH7,IBAD
     X     /64,100,-32768/

C     
C     FUNC. TO CALCULATE HOR. AZIM. FROM AZIM. IN COPLANE AND COPLANE ANGLE
C     
      CALHAZ(A,C)=ATAN(TAN(A*DTR)*COS(C*DTR))/DTR

C
C     FUNC. TO CALC. VERT. AZIM. FROM AZIM. IN COPLANE AND COPLANE ANGLE
C     (FOR RHIS ONLY)
C
      CALVAZ(A,C)=ATAN2(TAN(A*DTR),SIN(C*DTR))/DTR 

      IF(NRDOPT.EQ.1) THEN
C
C        BEGINNING OF SCAN
C
         KPEL=KEL
         IDIR=KDIR(KPEL)
         IDSV=IDIR
         IF (IRHICRS.EQ.2) THEN 
            IDIR=-IDIR
         END IF
      ELSE IF(NRDOPT.EQ.2) THEN
C
C        END OF SCAN (360 ONLY)
C
         DO 95 I=1,MAXIN
            NWORD(I,KAZC)=NWORD(I,3)
 95      CONTINUE
         NG=NWORD(8,KAZC)
         GO TO 110
      END IF
  100 CONTINUE

      IF(IREC.GE.KNDREC(KPEL)) GO TO 800
      IREC=IREC+1
C
C        READ IN NEXT BEAM
C
      CALL RDRYDK(KPCK,NWORD(1,KAZC),INSTA,LTMP,NRDOPT,NLEN)
      IF(INSTA.NE.0) GO TO 900
      NG=NWORD(8,KAZC)
C
C        COPY FIRST BEAM IN CASE OF 360 SCAN
C
      IF(NRDOPT.EQ.0) GO TO 110
         DO 105 I=1,MAXIN
            NWORD(I,3)=NWORD(I,KAZC)
  105    CONTINUE
         NRDOPT=0
  110 CONTINUE
C  AZIMUTH


      KAZ(KAZC)=(FLOAT(NWORD(1,KAZC))/FLOAT(JRH6))*UNSCAZ+0.5
C
C   CORRECTIONS FOR COPE DATA ONLY
C
         KAZ(KAZC)=KAZ(KAZC)+IADJAZ
         IF(KAZ(KAZC).LT.0) KAZ(KAZC)=KAZ(KAZC)+IZAD
C
C   END OF CORRECTIONS FOR COPE
C
      IF (ICOPLANE.EQ.4) THEN
C
C     RHI CALCULATION: CONVERT AZ AND ELEV FROM TAPE TO COPLANE ANGLES
C
         RHIAZ=FLOAT(NWORD(1,KAZC))/FLOAT(JRH6)
         AZC=90.0 - FLOAT(NWORD(2,KAZC))/FLOAT(JRH7)
         AZTMP=CALHAZ(AZC,RHIAZ)
         IF (AZTMP.LT.0.0) AZTMP=AZTMP+360.0
         KAZ(KAZC)=AZTMP*UNSCAZ + 0.5
         RHIAZ=FLOAT(NWORD(1,KAZC))/FLOAT(JRH6)
         AZC=FLOAT(NWORD(2,KAZC))/FLOAT(JRH7)
         
c     debugging code
c         azp1=azc1
c         azc1=azc

         KZV(KAZC)=CALVAZ(AZC,RHIAZ)*UNSCAZ + 0.5
      END IF
C  360 SCANS ONLY
      IF(IS360) GO TO 150
      IF(KAZ(KAZC)  .LT.  LOWAZ) KAZ(KAZC) = KAZ(KAZC)+IZAD
      IF(KZV(KAZC)  .LT.  LOWAZ2) KZV(KAZC) = KZV(KAZC)+IZAD
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
         IF(IDIR.LT.0) GO TO 125
         IF(KAZ(KAZC).GT.MAXAZ) THEN
            GO TO 100
         END IF
      ELSE
         IF(IDSV.LT.0) GO TO 125
         IF(KZV(KAZC).GT.MAXAZ2) THEN
            GO TO 100
         END IF
      END IF
      GO TO 150
  125 CONTINUE
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
         IF(KAZ(KAZC).LT.MINAZ) THEN
            GO TO 100
         END IF
      ELSE
         IF(KZV(KAZC).LT.MINAZ2) THEN
            GO TO 100
         END IF
      END IF
  150 CONTINUE
C  TIME.
      IHR =NWORD(3,KAZC)
      IMIN=NWORD(4,KAZC)
      ISEC=NWORD(5,KAZC)
      ITMDIF=( ((  IHR   *60+ IMIN   )*60+ ISEC   )
     X      -  ((IBEGT(1)*60+IBEGT(2))*60+IBEGT(3)) ) * SCLTIM
      IF (ITMDIF.LT.0) THEN
         WRITE(*,*)'***ITMDIF,IHR,IMIN,ISEC=',ITMDIF,IHR,IMIN,ISEC
      END IF
      NRDOPT=0
      NSTBM=0
      IF(NF.EQ.0) RETURN
C
C  DECIMATE NCAR FLAGGED VELOCITY FIELD
C
      DO 200 J=1,NF
      I=IDXFV(J)
      K=NRHD+(I-1)*NG
      DO 175 L=1,NG
      K=K+1
C      ITEST=AND(NWORD(K,KAZC),1)
      ITEST=ICEDAND(NWORD(K,KAZC),1)
      IF(ITEST.NE.0) GO TO 175
C  HERE IF VELOCITY VALUE IS FLAGGED WITH 0-BIT
      NWORD(K,KAZC)=IBAD
  175 CONTINUE
  200 CONTINUE
      RETURN
  800 CONTINUE
      NRDOPT=0
      NSTBM=1
      RETURN
  900 CONTINUE
      NRDOPT=0
      NSTBM=2
      STOP 400
      END
