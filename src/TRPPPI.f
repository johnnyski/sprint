      SUBROUTINE TRPPPI(ICART,ICTAB,NPREC,ICOB,NDX,NDY,NDZ,ZRTAB,
     X     MXCRT,IBLV,NRCBF,NST,DASANG,IFLAT,NUMFILT,XRTAB,IVREF)
C
C     DRIVER FOR INTERPOLATION. THIS SUBROUTINE IS SIMILAR TO
C     TRPVOL AND TRPAIR. IT IS DEDICATED TO INTERPOLATING SCANS
C     TO 2-D SURFACES. FOR EXAMPLE, A CONSTANT ELEVATION SCAN
C     WILL BE INTERPOLATED FIRST TO THE POINTS IN THE CONIC SURFACES.
C     THEN, IT WILL BE PROJECTED INTO A HORIZONTAL GRID. THIS
C     IS ALMOST IDENTICAL TO WHAT IS DONE WHEN DISPLAYING PPIS.
C     A CONSTANT AZIMUTH SCAN (RHI) WILL BE INTERPOLATED INTO
C     THE CONSTANT AZIMUTH SURFACE AND THEN PROJECTED INTO A PLANE.
C     
C     CURRENTLY, THE CODE IS ONLY SETUP TO DEAL WITH CONSTANT 
C     ELEVATION SCANS.
C
C     ICOPLANE = 0  ==>  R,A,E SCANS, INTERPOLATING TO CART GRID
C     ICOPLANE = 1  ==>  COPLANE SCANS, INTERPOLATING TO ANGLES IN DATA
C     ICOPLANE = 2  ==>  COPLANE SCANS, INTERPOLATING TO USER SPEC. ANGLES
C     ICOPLANE = 3  ==>  COPLANE SCANE, INTERPOLATING TO CART GRID
C     ICOPLANE = 4  ==>  RHI SCANS, INTERPOLATING TO CART GRID
C

      INCLUDE 'SPRINT.INC'
      PARAMETER  (MAXEL=80,MAXIN=8500,NIOB=85000,MAXFLD=8,
     X     NRCBF2=400000,IDIM=64/WORDSZ,MAXPLN=65536,
     X     IVDIM=(NRCBF2+1)/(WORDSZ/8))
      PARAMETER (MAXRNG=768)
      LOGICAL IS360,IFN360
      COMMON /FORMAT/ IRP,IBLOCK
      COMMON /NGATES/ NRGC,NRGP
      DIMENSION ICART(NPREC),ICOB(IDIM,2,NDX,NDY,NDZ),ZRTAB(MXCRT,2),
     X     IBLV(IDIM,4,NRCBF,2),IDATL(MAXFLD),IDATH(MAXFLD),
     X     IVREF(IVDIM,2),ICTAB(4),KZBUF(2,2),
     X     IBKNT(4,2),XRTAB(MXCRT,2)
      COMMON /TRANS/ X1,X2,XD,Y1,Y2,YD,Z1,Z2,ZD,NX,NY,NZ,XORG,YORG,
     X     ANGXAX,ZRAD,AZLOW,BAD,ASNF,ACSF,IAXORD(3),NPLANE,EDIAM
      COMMON /IO/ KPCK(NIOB),IRAY(MAXIN,3),KZ(3),KZC,KZP,IDSNEW,ITMDIF,
     X     ITIME(4),IBEGT(4),NSBM,NRDOPT,ILSTREC
      COMMON /SCNDAT/ ELB(MAXEL),DEI(MAXEL),KDIR(MAXEL),KNDREC(MAXEL),
     X     NEL,IEL1,IEL2,KEL,KPEL,ISD,ELTOL,RNOT,DRG,NG,MAXRD,CFAC(10)
      COMMON/ADJUST/INFLD(10,3),SCLIF(10,2),NIF,IOFLD(10,3),SCLOF(10,2),
     X     NOF,SCLAZ,SCLRNG,SCLEL,UNSCAZ,UNSCRG,UNSCEL,LOWAZ,IZAD,IS360,
     X   MINAZ,MAXAZ,METSPC(10),IWFLD(10),NFLI,SCLNYQ,UNSNYQ
      COMMON /FNAMES/ CINFLD(10),CIOFLD(10)
      CHARACTER*8 CINFLD, CIOFLD
      COMMON /SETAZM/ USAZ1,USAZ2,USGAP,USINC,IFOR36,IFORDR
      COMMON /RHIS/ IRHICRS,LOWAZ2,MAXAZ2,MINAZ2,ICART2(MAXPLN),
     X     ICTAB2(4),KZV(3),IDSV
      COMMON /COPLAN/ ICOPLN,BASAD
      COMMON /SCAN/ ICOPLANE,IFLGBAS,IPPI

c      common /junk/ azc1,azp1,upels(nrcbf2,2)

      LOGICAL ICOPLN
      DATA ATR /0.0174533/
      DATA IDATL/MAXFLD*0/
      DATA IDATH/MAXFLD*0/
C      DATA INITCB/ 1000004000020000100000B /
      DATA MASK/ O'100000'/
C     
C     THE FOLLOWING FUNCTION CALCULATES ELEV ANGLE FROM COPLANE AND HOR AZIM.
C     
      CALEL(F,A)=ATAN((TAN(F*ATR)*ABS(SIN(A*ATR))))/ATR
C
C     CONVERT AZIM IN THE HOR. TO AZIM IN THE VERTICAL FOR RHI SCANS
C
      KZH2KZV(AH,C)=ATAN2(TAN(90.*ATR - ATAN2(TAN(AH*ATR),COS(C*ATR))),
     X     1./SIN(C*ATR))*RTA*UNSCAZ + 0.5

      FX(X,Y)=ACSF*X-ASNF*Y+XORTR
      FY(X,Y)=ASNF*X+ACSF*Y+YORTR
      
C
C     CREATE A BIT MASK USED TO INTIALIZE ICOB. THE MASK IS
C     32768 (DECIMAL) REPEATED THROUGH THE LENGTH OF THE WORD
C
      INITCB = 0
      DO I=1,(WORDSZ/16)
         INITCB = ICEDOR(INITCB,ICEDSHFT(MASK,(I-1)*16))
      END DO
C     360 SCANS ONLY
      ICROSS=IZAD/2
      MAXEND= USGAP * UNSCAZ
C
C     ISSUE ERROR MESSAGE IF SCAN IS NOT A CONSTANT ELEVATION ONE
C     
      IF (ICOPLANE.NE.0) THEN
         WRITE(*,36)
 36      FORMAT(/,5X,'+++ONLY CONSTANT ELEVATION SCANS CAN BE',
     X        ' INTERPOLATED TO 2-D SURFACES (GRIDPPI)+++')
         STOP
      END IF
C
C        XORTR,YORTR IS LOWER LEFT CORNER OF CARTESIAN SYSTEM REL. TO RADAR
C
      IF (ICOPLANE.EQ.0 .OR. ICOPLANE.EQ.3 .OR. ICOPLANE.EQ.4) THEN
C
C     FOR REGULAR 3-D CARTESIAN GRID
C
         XORTR = X1*ACSF - Y1*ASNF - XORG
         YORTR = X1*ASNF + Y1*ACSF - YORG
         ZORTR = Z1 - ZRAD
      ELSE IF (ICOPLANE.EQ.1 .OR. ICOPLANE.EQ.2) THEN
C
C     FOR COPLANE COORD. SYSTEM
C
         ANGRD=(ANGXAX-90.)*ATR
         ASNFKP=SIN(ANGRD)
         ACSFKP=COS(ANGRD)

C
C     FIND RADAR COORDINATES IN ROTATED COORDINATE SYSTEM
C
         XRAD=XORG*ACSFKP - YORG*ASNFKP
         YRAD=XORG*ASNFKP + YORG*ACSFKP

C
C     FIND COORDINATE OF LOWER LEFT HAND PART OF GRID, RELATIVE TO RADAR
C
         XORTR = X1-XRAD
         YORTR = Y1-YRAD
      END IF
C
C        INITIALIZE OUTPUT TABLES AND HEIGHT BUFFERS
C
      NDZ=IEL2

      DO 3 K=1,NDZ
         DO 2 J=1,NDY
            DO 1 I=1,NDX
               DO 19 L=1,IDIM
                  ICOB(L,1,I,J,K)=INITCB
                  ICOB(L,2,I,J,K)=INITCB
 19            CONTINUE
 1          CONTINUE
 2       CONTINUE
 3    CONTINUE
      Z1=ELB(1)
      Z2=ELB(IEL2)
      NZ=IEL2
      ZD=ELB(2)-ELB(1)
      IF (ZD.EQ.0.0) THEN
         WRITE(*,*)'***INVALID ZD IN TRPVOL***'
         STOP
      END IF
      DO 7 I=1,NZ
         ZRTAB(I,1)=ELB(I)
 7    CONTINUE
      ZDI=1./ZD
      IF (ICOPLANE.EQ.4) XDI=1./XD
C
C     CHECK IF CURVED EARTH CORRECTIONS ARE DESIRED
C
      IF (IFLAT.EQ.1) THEN
         AKZI=0.0
      ELSE 
         AKZI=3./(4.*EDIAM)
      END IF
      ATR=ATAN(1.)/45.
      RTA=1./ATR
      KL=2
      KH=1
      IDS=0
      IBKNT(2,1)=0
      IBKNT(2,2)=0
      KEL=IEL1-1
C     NO INTERPOLATIONS BELOW SCANS 
      IBELOW=0
 10   CONTINUE
      KZP=1
      KZC=2
C     360 SCANS ONLY
      IFN360=.TRUE.
      NRDOPT=1
      KEL=KEL+1
      IF(KEL.GT.IEL2)GO TO 703

C
C     FOR RHI SCANS, SEE IF FIXED ANGLE HAS CROSSED 90 OR 270;
C     IF SO, SPECIAL PROCESSING WILL HAVE TO BE DONE.
C
      IRHICRS=0
      IF (ICOPLANE.EQ.4) THEN
      IF (KEL.GT.1) THEN
         ANG1=ELB(KEL-ISD)
         ANG2=ELB(KEL)
         IF (ANG1.GT.360.0) ANG1=ANG1-360.0
         IF (ANG2.GT.360.0) ANG2=ANG2-360.0
         IF ((ANG1.GE.45. .AND. ANG2.GE.45. .AND. ANG1.LT.135. .AND.
     X        ANG2.LT.135) .OR. (ANG1.GE.225 .AND. ANG2.GE.225 .AND.
     X        ANG1.LT.315. .AND. ANG2.LT.315.)) THEN
            IRHICRS=1
         ELSE IF ((ANG1.LT.45. .AND. ANG2.GE.45.) .OR.
     X            (ANG1.LT.225 .AND. ANG2.GE.225.)) THEN
            IRHICRS=2
         ELSE IF ((ANG1.LE.135. .AND. ANG2.GT.135.) .OR.
     X            (ANG1.LE.315. .AND. ANG2.GT.315.)) THEN
            IRHICRS=3
         ELSE
            IRHICRS=0
         END IF
      ELSE
         ANG1=ELB(KEL)
         IF (ANG1.GT.360.0) ANG1=ANG1-360.0
         IF ((ANG1.GE.45 .AND. ANG1.LT.135.) .OR. (ANG1.GE.225 .AND.
     X        ANG1.LT.315.)) THEN
            IRHICRS=1
         ELSE
            IRHICRS=0
         END IF
      END IF
      END IF

      CALL BEAMIN
      IF(NSBM.NE.0)GO TO 704
      KINT=0
      KSAV=KZC
      KZC=KZP
      KZP=KSAV
      CALL BEAMIN
      IF(NSBM.NE.0) GO TO 705
      IDS=IDSNEW
      KSAV=KL
      KL=KH
      KH=KSAV
      NRGP=IRAY(8,KZP)
      NRGC=IRAY(8,KZC)
      JL=2.+(IDS*0.5)
      KZLO=IDS*32767
      KZHI=KZLO
      Z1=ELB(1)
      Z2=ELB(IEL2)
      NZ=IEL2
      ZD=ELB(2)-ELB(1)
      IF (ZD.EQ.0.0) THEN
         WRITE(*,*)'***INVALID ZD IN TRPVOL***'
         STOP
      END IF
C     
C     INITIALIZATION FOR LOCATIONS ABOVE THIS PPI SCAN
C     
      KINT=KINT+2
      COLO=ELB(KPEL)
      COHI=ELB(KPEL+ISD)
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
         CALL RSCART(ICART,NRCBF,ICTAB,KZ(KZP),IDS,JL,IC,IHI,
     X        IBKNT(1,KH),KZHI,IS360,NST,IABOVE)
      ELSE
         JLV=2.+(IDSV*0.5)
         CALL RSCART(ICART2,NRCBF,ICTAB2,KZV(KZP),IDSV,JLV,IC,IHI,
     X        IBKNT(1,KH),KZHI,IS360,NST,IABOVE)
      END IF
      IF(NST.NE.0 .AND. ICOPLANE.NE.4) GO TO 800
C     360 SCANS ONLY
      IF(IS360)ICSAV=IC
 20   CONTINUE
 30   CONTINUE
      GO TO (90,55,35,35), KINT+1
 35   CONTINUE
C     
C     INTERPOLATION OF LOCATIONS ABOVE THIS PPI SCAN
C     
      IF (IABOVE.EQ.0) THEN
         GOTO (80,55), KINT-1
      END IF
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
         CALL IGETCP2(ICART(IC),KZLV,IX,IY)
      ELSE
         CALL IGETCP2(ICART2(IC),KZLV,IY,IZ)
      END IF
      KZHI=KZLV
      IF(IS360) THEN
C     360 SCANS ONLY
         IF(IABS(KZLV-KZ(KZC)).GT.ICROSS)
     X        KZ(KZC)=KZ(KZC)+ISIGN(IZAD,KZLV-KZ(KZC))
         IF(IABS(KZLV-KZ(KZP)).GT.ICROSS)
     X        KZ(KZP)=KZ(KZP)+ISIGN(IZAD,KZLV-KZ(KZP))
         ITST=(KZ(KZP)-KZLV)*IDS
         IF(ITST.GT.0) GO TO (80,55), KINT-1
      END IF
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
         ITST=(KZ(KZC)-KZLV)*IDS
      ELSE
         ITST=(KZV(KZC)-KZLV)*IDSV
      END IF
      IF(ITST.LT.0) GO TO (80,55), KINT-1
C     
C     GENERATE LOCATIONS ALONG Z-AXIS FOR EVERY (X,Y) POINT
C     BETWEEN THIS SCAN AND THE NEXT.
C     
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
         X=(IX-1)*XD
         Y=(IY-1)*YD
         RGXYSQ= FX(X,Y)**2+FY(X,Y)**2
         RGXY=SQRT(RGXYSQ)
         DIST=RGXY
      ELSE
         Y=(IY-1)*YD
         Z=(IZ-1)*ZD
         RGYZSQ=(Y+YORTR)**2. + (Z+ZORTR)**2.
         RGYZ=SQRT(RGYZSQ)
         DIST=RGYZ
      END IF
C     GET RANGE IN SURFACE OF FIXED ANGLE
      IF (ICOPLANE.EQ.0) DIST=DIST/COS(ELB(KPEL)*ATR)
      IF (ICOPLANE.EQ.3) THEN
C
C     SPECIAL CORRECTION FOR R,A,C --> CARTESIAN
C
         BETA = (KZLV*SCLAZ) - DASANG
         DIST=ABS(RGXY*SIN(BETA*ATR))
      ELSE IF (ICOPLANE.EQ.4) THEN
C
C     SPECIAL CORRECTION FOR RHI   --> CARTESIAN
C
         IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
            BETA = (KZLV*SCLAZ)
            DIST=RGXY*SIN(BETA*ATR)
         END IF
      END IF
      
      DISTSQ=DIST*DIST
      IF (DIST.NE.0.0 .OR. ICOPLANE.EQ.0) DISTI=1./DIST
      ZRTAB(KPEL,1)=COLO
      IZ1=KPEL
      IZ2=KPEL
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
C      IF (IZ1.EQ.0 .AND. IZ2.EQ.0) GOTO 55
      IF (IZ1.EQ.0 .AND. IZ2.EQ.0) GOTO 38
      IZ1=MAX0(IZ1,1)
      IZ2=MIN0(IZ2,NZ)
      IF(IZ1.GT.IZ2) GO TO 38
C     
C     GRID LOCATIONS FOUND BETWEEN THIS AND NEXT SCAN AT THIS
C     (X,Y) POSITION.
C     
      DO 37 I=IZ1,IZ2
         RNG=DIST
         IRNG=RNG*UNSCRG+0.5
         RNG=IRNG*SCLRNG
         IG=(RNG-RNOT)/DRG+1.0
         IF (IG.LE.0 .OR. IG.GE.NRGP .OR. IG.GE.NRGC) GOTO 37
         IF (IEL.LT.0) THEN
            WRITE(*,*)'***IEL,ELEV,ZADJ,DIST,ELB(KPEL)=',
     X           IEL,ELEV,ZADJ,DIST,ELB(KPEL)
            STOP
         END IF
         MN=-25
         CALL TRPD(IDATH,IEL,IRNG,KZLV,IDATL,0,IBLV(1,4,IHI,KH),NST,MN,
     X             NUMFILT,KZ)
         IF (NST.NE.0) GO TO 800
         CALL IPKDAT(ICOB(1,1,IX,IY,I),IDATH,NOF)
         IHI=IHI+IDS
         IF(IHI.LE.0.OR.IHI.GT.NRCBF) GO TO 707
 37   CONTINUE
 38   CONTINUE
      IC=IC+IDS
      IF(IS360) THEN
C     360 SCANS ONLY
         IF(IC.LE.0) IC=ICTAB(2)
         IF(IC.GT.ICTAB(2)) IC=1
         IF(IC.EQ.ICSAV) GO TO 45
      END IF
      IF(IC.GT.0.AND.IC.LE.ICTAB(2)) GO TO 35
      ELSE
C
C     INTERPOLATE ACROSS 90 OR 270 (*INACTIVE UNTIL I MODIFY CODE FOR RHIS*)
C
      IF (IX1.EQ.0 .AND. IX2.EQ.0) GOTO 48
      IX1=MAX0(IX1,1)
      IX2=MIN0(IX2,NX)
      IF (IX1.GT.IX2) GOTO 48 

      DO 47 I=IX1,IX2
         RNGSQ=RGYZSQ+XRTAB(I,2)
         RNG=SQRT(RNGSQ)
         ELEV=RTA*ATAN2((Z+ZORTR),XRTAB(I,1))
         IF (ELEV.LT.0.0) ELEV=ELEV+360.0
         IF (ELB(KPEL+ISD).GT.360.0 .AND. ELEV.LT.ELB(KPEL)) 
     X        ELEV=ELEV+360.0
         IEL=(ELEV-ELB(KPEL))*DEI(KPEL) + 0.5
         IRNG=RNG*UNSCRG + 0.5
         RNG=IRNG*SCLRNG
         IG=(RNG-RNOT)/DRG + 1.0
         IF (IG.LE.0 .OR. IG.GE.NRGP .OR. IG.GE.NRGC) GOTO 47
         IF (IEL.LT.0) THEN
            WRITE(*,*)'***ELEV,KPEL,ELB(KPEL),DEI(KPEL)=',
     X           ELEV,KPEL,ELB(KPEL),DEI(KPEL)
            WRITE(*,*)'***IEL=',IEL
            STOP
         END IF
         CALL TRPD(IDATH,IEL,IRNG,KZLV,IDATL,0,IBLV(1,4,IHI,KH),NST,MN,
     X             NUMFILT,KZV)
         IF (NST.NE.0) GO TO 800
         IF (WORDSZ.EQ.32) THEN
            CALL IPUTAI(IBLV(1,1,IHI,KH),I,IEL,IRNG)
            IBLV(2,1,IHI,KH)=ICART2(IC)
         ELSE IF (WORDSZ.EQ.64) THEN
            CALL IPUTAI(IWRD,I,IEL,IRNG)
            IBLV(1,1,IHI,KH)=ICEDOR(IWRD,ICEDSHFT(ICART2(IC),-32))
         END IF
         CALL IPKDAT(IBLV(1,2,IHI,KH),IDATH,NFLI)
         ILOC=(IHI-1)/(WORDSZ/8) + 1
         INDX=(WORDSZ/8) - (ILOC*(WORDSZ/8) - IHI)
         CALL IPUT8(IVREF(ILOC,KH),INDX,MN)
C         IVREF(IHI,KH)=MN
         IHI=IHI+IDSV
         IF(IHI.LE.0.OR.IHI.GT.NRCBF) GO TO 707
 47   CONTINUE
 48   CONTINUE
      IC=IC+IDSV
      IF(IC.GT.0.AND.IC.LE.ICTAB2(2)) GO TO 35
      END IF
 45   CONTINUE
      KINT=KINT-2
      KZHI=IDS*32767
      IF(KINT.EQ.0) GO TO 90
 55   CONTINUE
C     
 73   IF(KINT.EQ.0) GO TO 90
 80   CONTINUE
      KSAV=KZC
      KZC=KZP
      KZP=KSAV
      NRGP=NRGC
      CALL BEAMIN
      IF(NSBM.EQ.0) GO TO 30
      IF(NSBM.EQ.2) GO TO 710
      NRGC=IRAY(8,KZC)
C     
C     END OF SCAN (LAST BEAM HAS BEEN PROCESSED)
C     
      IF(IS360) THEN
C     360 SCANS ONLY
         IF(IFN360) THEN
            NRDOPT=2
            CALL BEAMIN
            IF(NSBM.EQ.2) GO TO 710
            IFN360=.FALSE.
            IF(IABS(KZ(KZP)-KZ(KZC)).GT.ICROSS)
     X           KZ(KZC)=KZ(KZC)+ISIGN(IZAD,KZ(KZP)-KZ(KZC))
            IF(IABS(KZ(KZP)-KZ(KZC)).LE.MAXEND) GO TO 30
         END IF
      END IF
 90   CONTINUE
C     
C     END OF ELEVATION SCAN
C     
      IF(KEL.GE.IEL2) GO TO 95
      CALL SCNEND(0)
C     
C     WRITE PARTIALLY FILLED INTERPOLATION BUFFER TO LEVEL FILE AND
C     UPDATE ASSOCIATED TABLES.
C     
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
         IHI=IHI-IDS
      ELSE
         IHI=IHI-IDSV
      END IF
      IF(IHI.LE.0.OR.IHI.GT.NRCBF) GO TO 10
      IF (IRHICRS.EQ.0 .OR. IRHICRS.EQ.3) THEN
         IBKNT(2+IDS,KH)=IHI
      ELSE
         IBKNT(2+IDSV,KH)=IHI
      END IF
      IBKNT(2,KH)=1
      IBKNT(4,KH)=1
      IF (IRHICRS.EQ.1 .OR. IRHICRS.EQ.2) THEN
         JL=2.+(IDSV*0.5)
      END IF
      CALL IGETCP(IBLV(1,1,IHI,KH),KZBUF(JL,KH),IX,IY)
      K=1+(2-JL)*(NRCBF-1)
      CALL IGETCP(IBLV(1,1,K,KH),KZBUF(3-JL,KH),IX,IY)
      GO TO 10
 95   CONTINUE
C     
C     END OF VOLUME SCAN...
C     
      CALL SCNEND(1)
      NST=0
      RETURN
 701  CALL TPQERX(309,1)
      GO TO 800
 703  CALL TPQERX(311,1)
      GO TO 800
 704  CALL TPQERX(312,1)
      GO TO 800
 705  CALL TPQERX(313,1)
      GO TO 800
 706  CALL TPQERX(314,1)
      GO TO 800
 707  CALL TPQERX(315,0)
      GO TO 800
 708  CALL TPQERX(316,1)
      GO TO 800
 709  CALL TPQERX(317,1)
      GO TO 800
 710  CALL TPQERX(304,1)
      GO TO 800
 711  CALL TPQERX(318,0)
      GO TO 800
 712  CALL TPQERX(319,1)
      GO TO 800
 800  CONTINUE
      NST=1
      RETURN
      END
